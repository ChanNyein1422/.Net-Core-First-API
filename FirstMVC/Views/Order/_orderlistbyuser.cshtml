@using Infra.Services;
@using Data.Model;
@using Data.ViewModel;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model PagedListClient<UserOrderViewModel>;

@if(Model.TotalCount <= 0){
    <h3>Search Not Found.</h3>
}else{
<table class="table">
    <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Order Time</th>
            <th scope="col">Details</th>
            <th scope="col">User ID</th>
            <th scope="col">User Name</th>
            <th scope="col">Email</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Results)
        {
            <tr id="div_order_@item.order.ID">
                <th scope="row">@item.order.ID</th>
                <td>@item.order.OrderTime</td>
                <td>@item.order.OrderDetails</td>
                <td>@item.order.UserID</td>
                <td>@item.user.Username</td>
                <td>@item.user.Email</td>
                <td>
                    <button type="button" data-id="@item.order.ID" class="btn btn-outline-primary btn-xs" onclick="load_editform(this)"><i class="bi bi-pencil"></i></button>
                    <button type="button" class="btn btn-danger btn-xs"
                            data-roleid="@item.order.ID"
                            data-action="@Url.Action("orderDelete", "Order")"
                            data-modalid="modal_delete"
                            data-id="@item.order.ID"
                    @{
                        var infoid = "div_order_" + item.order.ID;
                    }
                            data-infoid="@infoid"
                            onclick="deleteconfirmation(this)">
                        <i class="bi bi-trash"></i>

                    </button>
                </td>

            </tr>
        }

    </tbody>
</table>





<div class="pagedList" style="text-align:center;display: inline">
    @Html.PagedListPager(Model.Results, page => Url.Action("_orderlistbyuser", "Order",
    new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
</div>
}
